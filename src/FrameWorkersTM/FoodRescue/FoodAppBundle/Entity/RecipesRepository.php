<?php

namespace FrameWorkersTM\FoodRescue\FoodAppBundle\Entity;

use Doctrine\ORM\EntityRepository;
#use Doctrine\ORM\Query\ResultSetMapping;

/**
 * RecipesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecipesRepository extends EntityRepository
{

    // move demo user products to registered user
    public function addNewUserProductsFromDemoNativeSQL($userid,$guestid){
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
            UPDATE my_products
            SET user_id = :userid
            WHERE user_id = :guestid
        ");
        $statement->bindValue('userid', $userid);
        $statement->bindValue('guestid', $guestid);
        $statement->execute();
    }

    // get trashed products and write them to trashed products table
    public function findTrashedProductsNativeSQL($userid){
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
            SELECT product_id, quantity
            FROM my_products
            WHERE end_date < UNIX_TIMESTAMP(NOW()) AND user_id = :userid
        ");
        $statement->bindValue('userid', $userid);
        $statement->execute();
        $results = $statement->fetchAll();
        return $results;
    }

    // get recipes, when a user have minimum half products for them.
    public function findAvailableUserRecipesNativeSQL($userid, $quantity)
    {
        // find my products
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("SELECT product_id FROM my_products WHERE user_id = :userid;");
        $statement->bindValue('userid', $userid);
        $statement->execute();
        $myproducts = $statement->fetchAll();

        //if user have no product return false
        if (!$myproducts){ return; }

        //else prepare my products for query
        $temp = array();
        foreach($myproducts as $key=>$myproduct){
            $temp[$key] = $myproduct['product_id'];
        }

        $myProdsIds = implode(',',$temp);

//echo "My products:<br/>";
//print_r($myProdsIds);

        $statement = $connection->prepare("
             SELECT a.id, a.name, a.image_name, a.products_nr,
             (  SELECT COUNT(e.product_id)
                 FROM recipes_products e
                 WHERE e.product_id in (".$myProdsIds.")
                 AND e.recipe_id = a.id
             ) as products_accepted,
             f.cooked, f.liked

             FROM recipes as a
             LEFT JOIN users_recipes f on f.user_id = :userid AND f.recipe_id = a.id

             WHERE (SELECT COUNT(e.product_id)
                 FROM recipes_products e
                 WHERE e.product_id in (".$myProdsIds.")
                 AND e.recipe_id = a.id
                 ) >= a.products_nr/:quantity

             ORDER BY a.id ASC
             LIMIT 45
             ;
        ");
        $statement->bindValue('quantity', $quantity);
        $statement->bindValue('userid', $userid);
        $statement->execute();
        $results = $statement->fetchAll();
        return $results;
    }

    // DEPRECATED - get recipes (realtime calculation - not effective) (recipes page)
    public function findRecipesByUserNativeSQL($userid, $quantity, $limit = null)
    {

        $limitblock = (!empty($limit) ? $limit : 15);

        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
             SELECT DISTINCT(a.id), a.name, a.image_name, a.products_nr,
             (  SELECT COUNT(e.product_id)
                 FROM recipes_products e
                 WHERE e.product_id in (SELECT product_id FROM my_products WHERE user_id = :userid)
                 AND e.recipe_id = a.id
             ) as products_accepted,
             f.cooked, f.liked

             FROM recipes as a
             LEFT JOIN recipes_products as b ON b.recipe_id = a.id
             LEFT JOIN products as d ON d.id = b.product_id
             LEFT JOIN users_recipes f on f.user_id = :userid AND f.recipe_id = a.id

             WHERE (SELECT COUNT(e.product_id)
                 FROM recipes_products e
                 WHERE e.product_id in (SELECT product_id FROM my_products WHERE user_id = :userid)
                 AND e.recipe_id = a.id
                 ) >= a.products_nr/:quantity

             ORDER BY a.id ASC
             LIMIT ".$limitblock."
             ;
        ");
        $statement->bindValue('quantity', $quantity);
        $statement->bindValue('userid', $userid);
        $statement->execute();
        $results = $statement->fetchAll();
        return $results;
    }

    // get recipe with info if it was cooked and liked (recipe page)
    public function findRecipeNativeSQL($userid, $recipeid)
    {
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
             SELECT a.id, a.name, a.describtion, a.image_name, a.products_nr,
             b.cooked, b.liked
             FROM recipes a
             LEFT JOIN users_recipes b ON b.user_id = :user_id AND b.recipe_id = :recipe_id
             WHERE a.id = :recipe_id
             ;
        ");
        $statement->bindValue('user_id', $userid);
        $statement->bindValue('recipe_id', $recipeid);
        $statement->execute();
        $res = $statement->fetch();
        return $res;
    }

    // get recipe products with quantity required and products nr i have for recipe (recipe page)
    public function findRecipeProductsNativeSQL($userid, $recipeid)
    {
// my_product_quantity nepanaudotas kolkas.
// cia tipo paziurejimui ar ne tik turime produkta, bet ir ar jo kiekis atitinka.

//taciau kadangi zemiau esanti sql ima 2x ta pati produkta jeigu mes turime 2x vienodus suvede
//tai nera mum naudinga

//jeigu padarau atskirai paemima tik ieinanciu i recepta
//ir paemima tik savo turimu kurie atitinka
//ir padarau kad savo dublikuojancius sudetu.

//tada reik daryti sutikrinima

 //recepto panaudotu prod formoje. jei reikejo 400ml peino. o panaudojo po 200ml tai reikia kazkaip kad isskirty formoje???

        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
             SELECT a.id, a.name, a.unit, b.quantity, d.quantity as my_product_quantity, d.id as my_product_id
             FROM products a
             LEFT JOIN recipes_products b on b.product_id = a.id
             LEFT JOIN my_products d on d.product_id = a.id AND d.user_id = :user_id
             WHERE b.recipe_id = :recipe_id
             ORDER BY a.id ASC
             ;
        ");
        $statement->bindValue('recipe_id', $recipeid);
        $statement->bindValue('user_id', $userid);
        $statement->execute();
        $result = $statement->fetchAll();
        return $result;
    }

}
